
\if 0

これらの特性はリアルタイムシステムにGPUを含むシステムを適応させるにあたって、self-suspending\cite{self-sus:1, self-sus:2}を代表に多くの問題を発生させる。

PTaskはGPUのスケジューリングをOSで管理することを目的とし、

GdevはCPU側のタスクには一切関与せずに、一つのデータ転送、一つのGPUカーネル実行それぞれをスケジューリング対象とし、
リザベーションベースのスケジューリングを行った上で、runqueueを優先度順に並び替えて実行順序の制御を行っている。
Gdevは汎目的GPUをマルチタスキングな汎用システムで用いることを目指した研究である。
そのため、リクエストされたラウンチの管理は可能であるが、
ラウンチがリクエストされるまでのタスクの管理は行えない。
リアルタイムを目指すとかんがえる場合、GPU実行のQoSを担保できたとしても機能として不十分であるといえる。

GPUSyncではGPUタスク全体をまず、I/Oを使うだけのCPUタスクとして解釈しリアルタイムスケジューリングしており、
GPUへのデータ転送、GPUカーネル実行、GPUからのデータ転送までを一つのクリティカルセクションと置いてCPU側をClusteredの固定優先度、動的優先度なスケジューリングとGPUアクセスの調停、バジェットエンフォースメントを併用している。

これらのフレームワークで行うアルゴリズムが実現できる基礎フレームワークをLinux-RTXGではローダブルカーネルモジュールによるアプローチによって目指す。

Linux-RTXGでは今後GPUタスクのスケジューリングに関する研究を進めるにあたり、フレームワークとして必要と思われる機構を提供する。
具体的には、CPUタスクの固定・動的優先度でのスケジューリング、GPU割り当てfor multiple GPU、GPU実行リクエストのスケジューリング（優先度＋リソースリザベーション）である。

\fi
