%!PS-Adobe-2.0 EPSF-2.0
%%Title: init_all.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Wed Jan 28 03:11:32 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (init_all.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (yusuke)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jan 28 03:11:32 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
602 280 M
63 0 V
6282 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
518 280 M
( 8) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
602 739 M
63 0 V
6282 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
518 739 M
( 10) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
602 1198 M
63 0 V
6282 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
-6366 0 R
( 12) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
602 1657 M
63 0 V
6282 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
-6366 0 R
( 14) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
602 2116 M
63 0 V
6282 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
-6366 0 R
( 16) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
602 2576 M
63 0 V
6282 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
-6366 0 R
( 18) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
602 3035 M
63 0 V
6282 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
-6366 0 R
( 20) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
602 3494 M
63 0 V
6282 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
-6366 0 R
( 22) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
602 3953 M
63 0 V
6282 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
-6366 0 R
( 24) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
602 4412 M
63 0 V
6282 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
-6366 0 R
( 26) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
602 4871 M
63 0 V
6282 0 R
-63 0 V
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
-6366 0 R
( 28) Rshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
2506 280 M
0 4591 R
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
0 -4731 R
(ISR w/o intercept) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
5044 280 M
0 4591 R
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
0 -4731 R
(ISR w/ intercept) Cshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
1.000 UL
LTb
602 4871 N
602 280 L
6345 0 V
0 4591 V
-6345 0 V
Z stroke
LCb setrgbcolor
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
112 2575 M
currentpoint gsave translate -270 rotate 0 0 M
(Response times \(us\)) Cshow
grestore
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
LTb
0.500 UP
1.000 UL
LTb
% Begin plot #1
0.500 UP
1.000 UL
LT0
0.75 0.75 0.75 C LT0
0.75 0.75 0.75 C 0.250 1871 1215 1270 136 BoxColFill
LCb setrgbcolor
2506 1026 M
0 189 V
0 136 R
0 186 V
stroke
1871 1215 N
1270 0 V
0 136 V
-1270 0 V
0 -136 V
Z stroke
2443 1537 M
126 0 V
2443 1026 M
126 0 V
-698 271 R
1270 0 V
2506 331 Pls
2506 332 Pls
2506 367 Pls
2506 367 Pls
2506 368 Pls
2506 369 Pls
2506 371 Pls
2506 378 Pls
2506 387 Pls
2506 391 Pls
2506 401 Pls
2506 401 Pls
2506 403 Pls
2506 404 Pls
2506 405 Pls
2506 405 Pls
2506 409 Pls
2506 413 Pls
2506 414 Pls
2506 415 Pls
2506 416 Pls
2506 416 Pls
2506 417 Pls
2506 423 Pls
2506 426 Pls
2506 427 Pls
2506 428 Pls
2380 428 Pls
2506 428 Pls
2506 428 Pls
2506 430 Pls
2506 431 Pls
2506 432 Pls
2506 432 Pls
2506 434 Pls
2506 434 Pls
2506 435 Pls
2506 436 Pls
2506 439 Pls
2506 439 Pls
2506 440 Pls
2506 441 Pls
2380 441 Pls
2506 445 Pls
2506 446 Pls
2506 446 Pls
2506 451 Pls
2506 455 Pls
2506 460 Pls
2506 460 Pls
2506 465 Pls
2506 474 Pls
2506 479 Pls
2506 482 Pls
2506 491 Pls
2506 497 Pls
2506 511 Pls
2506 523 Pls
2506 545 Pls
2506 574 Pls
2506 728 Pls
2506 774 Pls
2506 779 Pls
2506 787 Pls
2506 884 Pls
2506 927 Pls
2506 934 Pls
2506 986 Pls
2506 989 Pls
2506 1556 Pls
2506 1560 Pls
2506 1562 Pls
2506 1585 Pls
2506 1587 Pls
2506 1596 Pls
2506 1606 Pls
2506 1608 Pls
2506 1610 Pls
2506 1612 Pls
2506 1641 Pls
2506 1643 Pls
2506 1643 Pls
2506 1647 Pls
2506 1649 Pls
2506 1678 Pls
2506 1687 Pls
2506 1688 Pls
2506 1689 Pls
2506 1690 Pls
2506 1697 Pls
2506 1699 Pls
2506 1703 Pls
2506 1708 Pls
2506 1712 Pls
2506 1728 Pls
2506 1732 Pls
2506 1736 Pls
2506 1737 Pls
2506 1742 Pls
2506 1750 Pls
2506 1767 Pls
2506 1788 Pls
2506 1799 Pls
2506 1803 Pls
2506 1813 Pls
2506 1825 Pls
2506 1838 Pls
2506 1888 Pls
2506 2778 Pls
2506 2832 Pls
2506 2870 Pls
2506 2884 Pls
2506 2895 Pls
2506 2912 Pls
% End plot #1
% Begin plot #2
0.500 UP
1.000 UL
LT1
0.00 0.00 0.00 C LT1
0.00 0.00 0.00 C 0.250 4409 2135 1270 179 BoxColFill
LCb setrgbcolor
5044 1872 M
0 263 V
0 179 R
0 267 V
stroke
4409 2135 N
1270 0 V
0 179 V
-1270 0 V
0 -179 V
Z stroke
4981 2581 M
126 0 V
4981 1872 M
126 0 V
-698 375 R
1270 0 V
5044 1159 Pls
5044 1161 Pls
5044 1172 Pls
5044 1225 Pls
5044 1238 Pls
5044 1244 Pls
5044 1246 Pls
5044 1257 Pls
5044 1261 Pls
5044 1265 Pls
5044 1268 Pls
5044 1268 Pls
5044 1279 Pls
5044 1279 Pls
5044 1285 Pls
5044 1287 Pls
5044 1290 Pls
5044 1290 Pls
5044 1290 Pls
5044 1291 Pls
4918 1291 Pls
5044 1295 Pls
5044 1295 Pls
5044 1296 Pls
5044 1299 Pls
5044 1301 Pls
5044 1305 Pls
5044 1306 Pls
5044 1306 Pls
5044 1309 Pls
5044 1310 Pls
5044 1311 Pls
5044 1312 Pls
5044 1312 Pls
4918 1312 Pls
5044 1314 Pls
5044 1315 Pls
5044 1320 Pls
5044 1320 Pls
5044 1326 Pls
5044 1328 Pls
5044 1330 Pls
5044 1330 Pls
5044 1330 Pls
5044 1334 Pls
5044 1336 Pls
5044 1336 Pls
5044 1341 Pls
5044 1349 Pls
5044 1354 Pls
5044 1355 Pls
5044 1369 Pls
5044 1377 Pls
5044 1382 Pls
5044 1408 Pls
5044 1423 Pls
5044 1551 Pls
5044 1590 Pls
5044 1610 Pls
5044 1680 Pls
5044 1749 Pls
5044 1787 Pls
5044 1803 Pls
5044 1813 Pls
5044 1819 Pls
5044 2586 Pls
5044 2604 Pls
5044 2606 Pls
5044 2619 Pls
5044 2636 Pls
5044 2656 Pls
5044 2748 Pls
5044 2839 Pls
5044 2899 Pls
5044 2907 Pls
5044 3076 Pls
5044 3089 Pls
5044 3119 Pls
5044 3168 Pls
5044 3358 Pls
5044 3514 Pls
5044 3562 Pls
5044 3600 Pls
5044 3631 Pls
5044 3678 Pls
5044 3680 Pls
5044 3685 Pls
5044 3691 Pls
5044 3692 Pls
5044 3704 Pls
5044 3719 Pls
5044 3721 Pls
5044 3729 Pls
5044 3729 Pls
5044 3757 Pls
5044 3777 Pls
5044 3780 Pls
5044 3794 Pls
5044 3802 Pls
5044 3806 Pls
5044 3810 Pls
5044 3828 Pls
5044 3829 Pls
5044 3832 Pls
5044 3844 Pls
5044 3852 Pls
5044 3869 Pls
5044 3884 Pls
5044 3898 Pls
5044 3920 Pls
5044 3929 Pls
5044 3933 Pls
5044 3943 Pls
5044 3953 Pls
5044 3961 Pls
5044 3968 Pls
5044 3977 Pls
5044 3982 Pls
5044 3989 Pls
5044 3992 Pls
5044 3997 Pls
5044 4045 Pls
5044 4060 Pls
5044 4082 Pls
5044 4084 Pls
5044 4096 Pls
5044 4111 Pls
5044 4137 Pls
5044 4180 Pls
5044 4208 Pls
5044 4215 Pls
5044 4265 Pls
5044 4274 Pls
5044 4296 Pls
5044 4309 Pls
5044 4336 Pls
5044 4351 Pls
5044 4430 Pls
5044 4498 Pls
5044 4668 Pls
% End plot #2
1.000 UL
LTb
602 4871 N
602 280 L
6345 0 V
0 4591 V
-6345 0 V
Z stroke
0.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
